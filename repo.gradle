apply plugin: 'maven'
apply plugin: 'maven-publish'
repositories {
    mavenLocal()
    maven { url "${rootProject.ext.maven.urlGroup}" }
}



if (!project.getRootProject().hasProperty("aarMap")) {
    project.getRootProject().ext.set("aarMap", new HashSet<String>())
}


publishing {
    publications {
        maven(MavenPublication) {
            if (components.hasWithName("java")) {
                from components.java
            } else if (components.hasWithName("android")) {
                from components.android
            } else {
                artifact "${project.buildDir}/outputs/aar/${project.name}-debug.aar"
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.api.allDependencies.each {
                        if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
//							dependencyNode.appendNode('scope', 'provided')
                            if (it.group == groupId && project.getRootProject().aarMap.contains(it.name)) {
                                dependencyNode.appendNode('type', 'aar')
                            }
                        }
                    }
                }
            }
        }
    }
    repositories {
        mavenLocal()
        maven {
            println("rootProject name:" + project.name)
            println("rootProject version:" + project.version)
            println("rootProject group:" + project.group)
            if(!project.version.contains("SNAPSHOT")){
                url "${rootProject.ext.maven.urlRelease}"
            }else{
                url "${rootProject.ext.maven.urlDev}"
            }
            credentials {
                username = "deployment"
                password = "deployment123"
            }
        }
    }
}
